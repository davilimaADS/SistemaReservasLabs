// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaReservasLabs.Data;

#nullable disable

namespace SistemaReservasLabs.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250614080308_AddEmManutencaoToLaboratorio")]
    partial class AddEmManutencaoToLaboratorio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.HistoricoReserva", b =>
                {
                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Curso");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataHoraFim");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataHoraInicio");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Disciplina");

                    b.Property<string>("Laboratorio")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Laboratorio");

                    b.Property<string>("Professor")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Professor");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.Property<string>("Turma")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Turma");

                    b.ToTable((string)null);

                    b.ToView("View_HistoricoReservas", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorLaboratorioId")
                        .HasColumnType("int");

                    b.Property<bool>("EmManutencao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CoordenadorLaboratorioId");

                    b.ToTable("Laboratorios", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.LaboratorioTecnico", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("LaboratorioId", "TecnicoId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("LaboratorioTecnicos", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PeriodoLetivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("EmailInstitucional")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Laboratorio", b =>
                {
                    b.HasOne("SistemaReservasLabs.Models.Entities.Usuario", "CoordenadorLaboratorio")
                        .WithMany()
                        .HasForeignKey("CoordenadorLaboratorioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CoordenadorLaboratorio");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.LaboratorioTecnico", b =>
                {
                    b.HasOne("SistemaReservasLabs.Models.Entities.Laboratorio", "Laboratorio")
                        .WithMany("Tecnicos")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaReservasLabs.Models.Entities.Usuario", "Tecnico")
                        .WithMany("LaboratoriosTecnico")
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Reserva", b =>
                {
                    b.HasOne("SistemaReservasLabs.Models.Entities.Laboratorio", "Laboratorio")
                        .WithMany("Reservas")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaReservasLabs.Models.Entities.Usuario", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaReservasLabs.Models.Entities.Turma", "Turma")
                        .WithMany("Reservas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Turma", b =>
                {
                    b.HasOne("SistemaReservasLabs.Models.Entities.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Usuario", b =>
                {
                    b.HasOne("SistemaReservasLabs.Models.Entities.Curso", "Curso")
                        .WithMany("Professores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Curso", b =>
                {
                    b.Navigation("Professores");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Laboratorio", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Tecnicos");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Turma", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SistemaReservasLabs.Models.Entities.Usuario", b =>
                {
                    b.Navigation("LaboratoriosTecnico");
                });
#pragma warning restore 612, 618
        }
    }
}
